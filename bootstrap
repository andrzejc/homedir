#!/usr/bin/env bash
# bootstrap: populate home directory: create initial environment symlinks.
# This file belongs to andrzejc/homedir: git@github.com:andrzejc/homedir.git
set -e
set -x

HOMEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"

source "$HOMEDIR/shlib.sh"

git_clone_or_pull() {
	local url="$1"
	local out_dir="$2"
	if [ -d "$out_dir" ]
	then
		pushd "$out_dir"
		git pull --quiet || shlog_warn "git pull failed for $out_dir"
		popd
	else
		git clone --quiet "$repo" "$out_dir" || shlog_warn "git clone failed for $repo"
	fi
}

run_vim_pathogen() {
	# Pathogen install into ~/.vim/autoload
	mkdir -p ~/.vim/autoload ~/.vim/bundle && \
		curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim
}

clone_vim_plugin_bundle() {
	local repo="$1"
	local name=`basename $repo | sed s/\\.git$//`
	local bundledir="$HOME/.vim/bundle/$name"
	git_clone_or_pull "$repo" "$bundledir"
}

run_vim_bundles() {
	# Clone or update vim plugin repos
	cat $HOMEDIR/vim-bundles | sed -e 's/#.*$//' -e '/^\w*$/d' | \
		while read repo
		do
			clone_vim_plugin_bundle "$repo"
		done
}

run_vim_c_syntax_file() {
	# Install extended C syntax file for VIM
	mkdir -p ~/.vim/after/syntax
	# TODO switch to using https sources immediately!
	curl -LSso ~/.vim/after/syntax/c.vim \
		'http://www.vim.org/scripts/download_script.php?src_id=14548'
}

run_git_prompt() {
	# Install .git-prompt.sh into ~/
	mkdir -p "$HOMEDIR/module.d"
	curl https://raw.githubusercontent.com/git/git/master/contrib/completion/git-prompt.sh \
		-LSso "$HOMEDIR/module.d/git-prompt.sh"
}

run_tmux_tpm() {
	# Install tmux plugin manager
	git_clone_or_pull \
		https://github.com/tmux-plugins/tpm "$HOME/.tmux/plugins/tpm"
}

remove_leading_dot() {
	local str="$1"
	echo "$str" | tail -c +2
}

run_symlinks() {
	# Install rc files symlinks into ~/
	local LINKS=".bashrc .bash_profile .vimrc .tmux.conf .tmux.conf.theme \
		.cgdb/cgdbrc"

	for x in ${LINKS}
	do
		local src="$HOMEDIR/$(remove_leading_dot $x)"
		local dst="$HOME/$x"
		# Only if $dst doesn't already point to $src
		if [[ (! -e "${dst}") || (! "${dst}" -ef "${src}") ]]
		then
			local dir="$(dirname ${x})"
			# this will fail preventing overwriting file with dir symlink
			[ -d "$HOME/$dir" ] || mkdir -p "$HOME/$dir"
			# Symlink, with confirmation if already exists
			ln -siv "${src}" "${dst}"
		fi
	done
}

run_clean_obsolete_files() {
	local FILES="$HOME/.ansi-colors.sh $HOME/.git-prompt.sh"
	for x in $FILES
	do
		if [ -f "$x" ]
		then
			rm -iv "$x"
		fi
	done
}

run_check() {
	for t in $(ls $HOMEDIR/test/test-*.sh)
	do
		${SHELL} -c "$t"
	done
}

case "${1:-all}" in
	all)
		run_vim_pathogen
		run_vim_bundles
		run_vim_c_syntax_file
		run_git_prompt
		run_tmux_tpm
		run_symlinks
		run_clean_obsolete_files
		run_check
	;;
	vim_pathogen|\
	vim_bundles|\
	vim_c_syntax_file|\
	git_prompt|\
	tmux_tpm|\
	symlinks|\
	clean_obsolete_files|\
	check)
		eval "run_$1"
	;;
	*)
		# TODO display usage
		exit 1
	;;
esac

