function(find_iTunes)
	find_package(osascript QUIET)
	find_program(iTunes_EXECUTABLE iTunes DOC "iTunes.app executable path")
	if(iTunes_EXECUTABLE)
		if(osascript_EXECUTABLE)
			execute_process(COMMAND "${osascript_EXECUTABLE}" -e "version of app \"iTunes\""
				RESULT_VARIABLE res
				OUTPUT_VARIABLE out
				ERROR_VARIABLE err
				OUTPUT_STRIP_TRAILING_WHITESPACE)
		else()
			set(res 1)
		endif()
		if(res)
			set(iTunes_VERSION_STRING "" PARENT_SCOPE)
		else()
			set(_iTunes_ver_regex [[(([0-9]+)(\.([0-9]+)(\.([0-9]+))?)?[^ $]*)]])
			if(out MATCHES "${_iTunes_ver_regex}")
				set(iTunes_VERSION_STRING "${CMAKE_MATCH_1}" PARENT_SCOPE)
				set(iTunes_VERSION_MAJOR "${CMAKE_MATCH_2}" PARENT_SCOPE)
				set(iTunes_VERSION_MINOR "${CMAKE_MATCH_4}" PARENT_SCOPE)
				set(iTunes_VERSION_PATCH "${CMAKE_MATCH_6}" PARENT_SCOPE)
				else()
				if(NOT iTunes_FIND_QUIETLY)
					string(REPLACE "\n" "\n  " ver_msg "\n${out}")
					message(WARNING "iTunes version not recognized:${ver_msg}\nPlease report.")
				endif()
			endif()
			set(iTunes_VERSION "${iTunes_VERSION_MAJOR}")
			if(NOT "x${iTunes_VERSION}" STREQUAL "x")
				foreach(c MINOR PATCH TWEAK)
					if(NOT "x${iTunes_VERSION_${c}}" STREQUAL "x")
						string(APPEND iTunes_VERSION ".${iTunes_VERSION_${c}}")
					else()
						break()
					endif()
				endforeach()
			endif()
			set(iTunes_VERSION "${iTunes_VERSION}" PARENT_SCOPE)
		endif()
	endif()
	set(iTunes_EXECUTABLE "${iTunes_EXECUTABLE}" PARENT_SCOPE)
endfunction(find_iTunes)

include(FindPackageHandleStandardArgs)
find_iTunes()
find_package_handle_standard_args(iTunes REQUIRED_VARS iTunes_EXECUTABLE VERSION_VAR iTunes_VERSION_STRING)
mark_as_advanced(iTunes_EXECUTABLE)