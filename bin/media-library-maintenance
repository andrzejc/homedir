#!/usr/bin/env bash
set -e -o pipefail

HOMEDIR="$(cd "$(dirname "${BASH_SOURCE[0]}")"/.. && pwd)"
CMAKE_COMMAND="${CMAKE_COMMAND:-cmake}"
MEDIA_LIBRARY_MAINTENANCE_MODE="${MEDIA_LIBRARY_MAINTENANCE_MODE:-recode_all}"

create_mlm_dir() {
	"${CMAKE_COMMAND}" -E make_directory "${mlm_dir}"
}

set_generator() {
	local gen="$1"
	# set generator only on first run
	[ -f "${mlm_dir}/CMakeCache.txt" ] || \
		[ "${gen}" == "" ] || \
			gen_cmd="-G"${gen}""
}

generate_cmake_lists() {
	local cmake_lists="${dir}/CMakeLists.txt"
	[ -f "${cmake_lists}" ] || {
		# fresh directory, do some setup
		# minimal CMakeLists.txt file
		echo "Creating minimal CMakeLists.txt file..."
		cat > "${cmake_lists}" <<-EOF
			cmake_minimum_required(VERSION 3.4)
			project(MusicLibraryMaintenance VERSION 0.0.1 DESCRIPTION "Generated by media-library-maintenance" LANGUAGES NONE)
			include(MediaLibraryMaintenance)
			mark_as_advanced(FORCE CMAKE_INSTALL_PREFIX CMAKE_MODULE_PATH CMAKE_OSX_ARCHITECTURES CMAKE_OSX_DEPLOYMENT_TARGET CMAKE_OSX_SYSROOT)
			eval("\${MEDIA_LIBRARY_MAINTENANCE_MODE}(\"\${CMAKE_CURRENT_LIST_DIR}\")")
			EOF
	}
}

cmake_common_opts() {
	local dir_abs="$(cd "${dir}" && pwd)"
	echo "-DCMAKE_MODULE_PATH:INTERNAL=${HOMEDIR}/cmake"
	echo "-DMEDIA_LIBRARY_MAINTENANCE_MODE:INTERNAL=${MEDIA_LIBRARY_MAINTENANCE_MODE}"
	echo "${gen_cmd}"
	echo "${dir_abs}"
}

cmake_generate() {
	"${CMAKE_COMMAND}" -E chdir "${mlm_dir}" "${CMAKE_COMMAND}" $(cmake_common_opts)
}

cmake_build() {
	"${CMAKE_COMMAND}" --build "${mlm_dir}"
}

cmake_ccmake() {
	local ccmake_cmd="$(dirname "$(which "${CMAKE_COMMAND}")")"/ccmake
	"${CMAKE_COMMAND}" -E chdir "${mlm_dir}" "${ccmake_cmd}" $(cmake_common_opts)
}

run_config=
while [ $# -gt 0 ]
do
	case "$1" in
	--config)    run_config=1; shift; ;;
	--generator) shift; CMAKE_GENERATOR="$1"; shift ;;
    --mode) shift; MEDIA_LIBRARY_MAINTENANCE_MODE="$1"; shift ;;
	--help) shift; # TODO 
		;;
	--dir)       shift; mlm_dir="$1"; shift; ;;
	*)           dir="$1"; shift; ;;
	esac
done

dir="${dir:-.}"
mlm_dir="${mlm_dir:-"${dir}"/.mlm}"
gen_cmd=

create_mlm_dir
set_generator "${CMAKE_GENERATOR:-}"
generate_cmake_lists
if [ "${run_config}" == 1 ]
then
	cmake_ccmake
else
	cmake_generate
	cmake_build
fi
